version: "3.7"

x-images:
  django: &django
    build:
      context: .
      dockerfile: .docker/backend/Dockerfile
      target: dev
    user: ${UID:-1000}:${GID:-1000}
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings.dev
    env_file:
      - db.env
      - app.env
    volumes:
      - .:/opt/terra-visu


services:
  db:
    image: postgis/postgis:15-3.3
    env_file:
      - db.env
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    volumes:
      - redis:/data

  elasticsearch:
    hostname: elasticsearch
    image: elasticsearch:7.16.2
    environment:
      ES_JAVA_OPTS: ${ES_JAVA_OPTS:--Xms1g -Xmx1g}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl --silent --fail localhost:9200/_cluster/health || exit 1',
        ]
      interval: 30s
      timeout: 30s
      retries: 3

    volumes:
      - ./conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch:/usr/share/elasticsearch/data/

  web:
    <<: [ *django ]
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  celery:
    <<: [ *django ]
    command: celery -A project worker -B -c 1 -l INFO -E
    depends_on:
      - db
      - web
      - redis

  frontend:
    build:
      context: .
      dockerfile: .docker/frontend/Dockerfile
    volumes:
      - ./project/frontend:/app/project/frontend
      - /app/project/frontend/visu-front/node_modules
    depends_on:
      - web
      - elasticsearch

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    depends_on:
      - web
      - elasticsearch
    volumes:
      - ./public:/var/www/
      - ./conf/nginx.dev.conf:/etc/nginx/conf.d/default.conf

volumes:
  db:
  redis:
  elasticsearch:
