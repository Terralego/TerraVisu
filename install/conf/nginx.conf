upstream elasticserver {
    server elasticsearch:9200;
    keepalive 30;
}

upstream django {
    server web:8000;
}

server {
    listen 80;
    root /var/www/;
    server_name _;

    gzip on;
    # adds a Vary: Accept-Encoding in the response, and it's a valid varying
    # info as we may not gzip depending on the value of Accept-Encoding
    gzip_vary on;
    gzip_proxied any;
    # note that text/html is always on by default
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/cache-manifest
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        application/rss+xml
        application/javascript
        application/atom+xml
        application/ld+json
        application/manifest+json
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        image/svg+xml
        application/xhtml+xml
        application/vnd.mapbox-vector-tile
        font/opentype;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_comp_level 4;
    client_max_body_size 100M;
    location ~ ^/(api|config|debug|private|base-layers|env.json) {
        proxy_pass         http://django;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location ^~ /private_files/ {
        internal;
        alias /private_files/;
    }

    # specific ES security config. Allow put from stack, and search from all.
    location ^~ /elasticsearch/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://elasticserver/;

        # Never cache the API content to prevent proxy caching
        add_header Pragma "no-cache";
        add_header Cache-Control "private, max-age=0, no-cache, no-store";

        satisfy all;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 127.0.0.1;
        deny all;

        location ~ ^/elasticsearch/(([^\/]+/)?(_msearch|_search)(/.*)?) {
            allow all;
            proxy_pass http://elasticserver/$1$is_args$args;
        }
    }

    # Setup named location for Django requests and handle proxy details
    location ^~ /admin/ {
        root /var/www/;
        index index.html index.htm;
        try_files $uri $uri/ $uri.html index.html /admin/index.html;
    }

    location / {
        root /var/www/;
        index index.html index.htm;
        try_files $uri $uri/ $uri.html index.html /index.html;
    }
}